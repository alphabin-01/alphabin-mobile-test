name: Playwright Mobile Browser Tests

on:
  workflow_dispatch:
  schedule:
    - cron: '12 6 * * 1-5'  # 11:42 AM IST on weekdays

jobs:
  android-tests:
    name: Run Playwright shards
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        shardIndex: [1,2,3,4,5,6,7,8,9,10]
        shardTotal: [10]

    steps:
      - name: ‚¨áÔ∏è Checkout code
        uses: actions/checkout@v4

      - name: ‚¨¢ Setup Node.js 18.x
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: üíæ Cache npm dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: üì¶ Install deps + browsers
        run: |
          npm ci
          npx playwright install --with-deps

      - name: ‚ñ∂Ô∏è Run shard ${{ matrix.shardIndex }}
        run: npm run test:chrome -- --shard=${{ matrix.shardIndex }}/${{ matrix.shardTotal }}


      - name: ‚òÅÔ∏è Upload blob report
        uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: blob-report-${{ matrix.shardIndex }}
          path: ./blob-report
          retention-days: 1

  # ios-tests:
  #   name: iOS Safari (iPhone 12)
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: ‚¨áÔ∏è Checkout code
  #       uses: actions/checkout@v4

  #     - name: ‚¨¢ Setup Node.js 18.x
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: '18'

  #     - name: üíæ Cache npm dependencies
  #       uses: actions/cache@v4
  #       with:
  #         path: ~/.npm
  #         key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
  #         restore-keys: |
  #           ${{ runner.os }}-node-

  #     - name: üì¶ Install deps + browsers
  #       run: |
  #         npm ci
  #         npx playwright install --with-deps

  #     - name: ‚ñ∂Ô∏è Run iOS Safari tests
  #       run: npx playwright test --project="Mobile Safari"

  #     - name: ‚òÅÔ∏è Upload iOS Report
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: ios-report
  #         path: ./playwright-report
  #         retention-days: 7

  merge-reports:
      name: Merge Reports
      needs: android-tests
      if: always()             # run even if some shards fail
      runs-on: ubuntu-latest

      steps:
        - name: ‚¨áÔ∏è Checkout code
          uses: actions/checkout@v4

        - name: ‚¨¢ Setup Node.js 18.x
          uses: actions/setup-node@v3
          with:
            node-version: '18'

        - name: Cache npm dependencies
          uses: actions/cache@v3
          with:
            path: ~/.npm
            key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
            restore-keys: |
              ${{ runner.os }}-node-
    
        - name: Install deps + browsers
          run: |
            npm ci
            npx playwright install --with-deps
        
        - name: Download all blob reports
          uses: actions/download-artifact@v4
          with:
            path: ./all-blob-reports
            pattern: blob-report-*
            merge-multiple: true
        
        - name: Merge HTML & JSON reports
          run: npx playwright merge-reports --config=playwright.config.js ./all-blob-reports
        
        - name: Upload combined report
          uses: actions/upload-artifact@v4
          with:
            name: Playwright Test Report
            path: ./playwright-report
            retention-days: 14

        - name: Send testDino Report
          env:
            NODE_ENV: 'staging'
          run: |
            npx --yes tdpw ./playwright-report \
              --token="trx_staging_96dde6aa397caba148106304889ae88a2a5339b4e0da54e64a8f2324e87ec73c" \
              --upload-html \
              --verbose
